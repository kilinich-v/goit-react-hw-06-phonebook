{"version":3,"sources":["components/AddContactForm/Form.jsx","components/AddContactForm/index.jsx","components/Contacts/FindContacts.jsx","components/Contacts/ContactsList.jsx","components/Contacts/index.jsx","App.js","index.js","components/AddContactForm/styles.module.scss","components/Contacts/styles.module.scss"],"names":["Form","this","props","handleChange","handleSubmit","state","className","styles","form","onSubmit","label","type","name","value","placeholder","pattern","title","required","onChange","input","number","button","Component","INITIAL_STATE","Phonebook","target","setState","event","preventDefault","reset","FindContacts","filter","handleFilter","onInput","autoComplete","ContactsList","contacts","deleteContact","map","id","contact","onClick","Contacts","App","addNewContact","data","newContact","uuidv4","prevState","changeFilter","console","log","contactId","localStorage","getItem","contactsParsed","JSON","parse","prevProps","length","setItem","stringify","removeItem","visebleContacts","toLocaleLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.816574c1.chunk.js","sourcesContent":["import { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './styles.module.scss'\r\n\r\nexport class Form extends Component {\r\n    render() {\r\n        const { handleChange, handleSubmit, state } = this.props;\r\n\r\n        return (\r\n            <form className={styles.form} onSubmit={handleSubmit}>\r\n                <label className={styles.label}>\r\n                    <span>Name</span>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={state.name}\r\n                        placeholder=\"John Doe\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        className={styles.input}\r\n                    />\r\n                </label>\r\n                <label className={styles.label}>\r\n                    <span>Number</span>\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={state.number}\r\n                        placeholder=\"+38...\"\r\n                        pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                        title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        className={styles.input}\r\n                    />\r\n                </label>\r\n                <button className={styles.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nForm.propTypes = {\r\n    state: PropTypes.object.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form\r\n","import { Component } from 'react';\r\nimport Form from './Form';\r\n\r\nconst INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nexport default class Phonebook extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form\r\n        handleChange={this.handleChange}\r\n        handleSubmit={this.handleSubmit}\r\n        state={this.state}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\nexport class FindContacts extends Component {\r\n    render() {\r\n        const { filter, handleFilter } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <h3>Find contacts by name</h3>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"query\"\r\n                    value={filter}\r\n                    required\r\n                    onInput={handleFilter}\r\n                    className={styles.input}\r\n                    autoComplete=\"off\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FindContacts\r\n","import { Component } from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\nexport class ContactsList extends Component {\r\n    render() {\r\n        const { contacts, deleteContact } = this.props;\r\n\r\n        return (\r\n            <ul className={styles.contacts}>\r\n                {contacts.map(({ id, name, number }) => {\r\n                    return (\r\n                        <li key={id} className={styles.contact}>\r\n                            <span>{name}</span>\r\n                            <span>{number}</span>\r\n                            <button className={styles.button} onClick={() => deleteContact(id)}>X</button>\r\n                        </li>\r\n                    )\r\n                })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactsList\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FindContacts from './FindContacts';\r\nimport ContactsList from './ContactsList';\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    const { contacts, filter, onChange, deleteContact } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Contacts</h2>\r\n        <FindContacts filter={filter} handleFilter={onChange} />\r\n        <ContactsList contacts={contacts} deleteContact={deleteContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport AddContactForm from './components/AddContactForm';\nimport Contacts from './components/Contacts';\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const contactsParsed = JSON.parse(contacts);\n\n    if (contactsParsed) {\n      this.setState({ contacts: contactsParsed });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.state.contacts.length) {\n      localStorage.removeItem('contacts');\n      return;\n    }\n\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  }\n\n  addNewContact = data => {\n    const { name, number } = data;\n\n    const newContact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, newContact],\n      };\n    });\n  };\n\n  changeFilter = event => {\n    const { value } = event.target;\n    console.log(event);\n    this.setState({ filter: value });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const visebleContacts = contacts.filter(\n      ({ name, number }) =>\n        name.toLocaleLowerCase().includes(filter.toLocaleLowerCase()) ||\n        number.includes(filter),\n    );\n\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <div className=\"container\">\n          <AddContactForm onSubmit={this.addNewContact} />\n          <Contacts\n            contacts={visebleContacts}\n            filter={filter}\n            onChange={this.changeFilter}\n            deleteContact={this.deleteContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__1EXRL\",\"label\":\"styles_label__1e_r_\",\"button\":\"styles_button__jAewY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__STipq\",\"contacts\":\"styles_contacts__25F1D\",\"contact\":\"styles_contact__3cq3L\",\"button\":\"styles_button__2yBJb\"};"],"sourceRoot":""}